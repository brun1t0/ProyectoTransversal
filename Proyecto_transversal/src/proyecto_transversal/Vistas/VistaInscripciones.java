package proyecto_transversal.Vistas;

import java.util.ArrayList;
import java.util.List;
import proyecto_transversal.AccesoDatos.AlumnoData;
import proyecto_transversal.AccesoDatos.InscripcionData;
import proyecto_transversal.Entidades.Alumno;
import proyecto_transversal.Entidades.Inscripciones;
import proyecto_transversal.Entidades.Materia;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyecto_transversal.AccesoDatos.MateriaData;

/**
 *
 * @author Lucas
 */
public class VistaInscripciones extends javax.swing.JInternalFrame {

    private InscripcionData inscripciondata = new InscripcionData();
    private AlumnoData alumnosdata = new AlumnoData();
    private DefaultTableModel modeloTabla = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int i, int i1) {
            return false;
        }
    };
    private int botonSeleccionado = 0;

    public VistaInscripciones() {
        
        initComponents();
        for (Alumno listarAlumno : alumnosdata.listarAlumnos()) {
            cbAlumnos.addItem(listarAlumno);
        }
        InsertarModeloATabla();
        rowCount.setText(modeloTabla.getRowCount() + "");
        bInscribir.setEnabled(false);
        bAnularInscripcion.setEnabled(false);
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupBotones = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        rbMateriasInscriptas = new javax.swing.JRadioButton();
        rbMateriasNoInscriptas = new javax.swing.JRadioButton();
        cbAlumnos = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tTablaInscripciones = new javax.swing.JTable();
        bInscribir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bAnularInscripcion = new javax.swing.JButton();
        bSalir = new javax.swing.JButton();
        rowCount = new javax.swing.JLabel();
        tituloPrincipal = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        logoULP = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));

        jPanel1.setBackground(new java.awt.Color(74, 166, 134));

        grupBotones.add(rbMateriasInscriptas);
        rbMateriasInscriptas.setText("Materias Inscriptas");
        rbMateriasInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMateriasInscriptasActionPerformed(evt);
            }
        });

        grupBotones.add(rbMateriasNoInscriptas);
        rbMateriasNoInscriptas.setText("Materias no inscriptas");
        rbMateriasNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMateriasNoInscriptasActionPerformed(evt);
            }
        });

        cbAlumnos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbAlumnosItemStateChanged(evt);
            }
        });
        cbAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAlumnosActionPerformed(evt);
            }
        });
        cbAlumnos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbAlumnosPropertyChange(evt);
            }
        });

        tTablaInscripciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Año"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Short.class, java.lang.String.class, java.lang.Short.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tTablaInscripciones);
        if (tTablaInscripciones.getColumnModel().getColumnCount() > 0) {
            tTablaInscripciones.getColumnModel().getColumn(0).setHeaderValue("ID");
            tTablaInscripciones.getColumnModel().getColumn(1).setHeaderValue("Nombre");
            tTablaInscripciones.getColumnModel().getColumn(2).setHeaderValue("Año");
        }

        bInscribir.setText("Inscribir");
        bInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInscribirActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Listado de Materias");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Seleccione un Alumno");

        bAnularInscripcion.setText("Anular inscripción");
        bAnularInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAnularInscripcionActionPerformed(evt);
            }
        });

        bSalir.setText("Salir");
        bSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirActionPerformed(evt);
            }
        });

        tituloPrincipal.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        tituloPrincipal.setForeground(new java.awt.Color(0, 0, 0));
        tituloPrincipal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tituloPrincipal.setText("Formulario de Inscripcion");

        jSeparator2.setBackground(new java.awt.Color(204, 204, 204));

        logoULP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_transversal/Recursos/logoULP.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rowCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(718, 718, 718))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bInscribir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(129, 129, 129)
                        .addComponent(bAnularInscripcion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(149, 149, 149)
                        .addComponent(bSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(74, 74, 74))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbAlumnos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rbMateriasInscriptas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(201, 201, 201)
                                .addComponent(rbMateriasNoInscriptas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(73, 73, 73))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(tituloPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(70, 70, 70)
                        .addComponent(logoULP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10))
                    .addComponent(jSeparator2))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logoULP)
                    .addComponent(tituloPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rowCount, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbAlumnos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbMateriasNoInscriptas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(rbMateriasInscriptas, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bInscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bAnularInscripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAlumnosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbAlumnosActionPerformed

    private void bAnularInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAnularInscripcionActionPerformed
        try {
            Alumno alumno = cbAlumnos.getItemAt(cbAlumnos.getSelectedIndex());
            int IDAlumno = alumno.getIdalumno();
            int IDMateria = (int) modeloTabla.getValueAt(tTablaInscripciones.getSelectedRow(), 0);

            inscripciondata.borrarInscripcionMateriaAlumno(IDAlumno, IDMateria);

            eliminarTodosLosElementosDeLaTabla();
            actualizarMateriasInscriptas();

        } catch (ArrayIndexOutOfBoundsException aibe) {
            JOptionPane.showMessageDialog(null, "¡Debes escoger almenos una materia!");
        }catch(NullPointerException np ){
            JOptionPane.showMessageDialog(this, "La tabla está vacía. Debe ingresar almenos una materia");
        }
    }//GEN-LAST:event_bAnularInscripcionActionPerformed

    private void bSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirActionPerformed
        
        removeAll();
        repaint();
        setVisible(false);
    }//GEN-LAST:event_bSalirActionPerformed

    private void bInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInscribirActionPerformed
        try {
            Alumno alumno = cbAlumnos.getItemAt(cbAlumnos.getSelectedIndex());

            int ID = (int) modeloTabla.getValueAt(tTablaInscripciones.getSelectedRow(), 0);
            String nombre = (String) modeloTabla.getValueAt(tTablaInscripciones.getSelectedRow(), 1);
            int anio = (int) modeloTabla.getValueAt(tTablaInscripciones.getSelectedRow(), 2);

            Materia materia = new Materia(ID, nombre, anio, true);

            Inscripciones insc = new Inscripciones(ID, alumno, materia);

            inscripciondata.guardarInscripcion(insc);
            eliminarTodosLosElementosDeLaTabla();
            actualizarMateriasNoInscriptas();
        } catch (ArrayIndexOutOfBoundsException aibe) {
            JOptionPane.showMessageDialog(null, "¡Debes escoger almenos una materia!");
        }catch(NullPointerException np ){
            JOptionPane.showMessageDialog(this, "La tabla está vacía. Debe ingresar almenos una materia");
        }
    }//GEN-LAST:event_bInscribirActionPerformed

    private void rbMateriasNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMateriasNoInscriptasActionPerformed
        bInscribir.setEnabled(true);
        bAnularInscripcion.setEnabled(false);
        eliminarTodosLosElementosDeLaTabla();
        actualizarMateriasNoInscriptas();

    }//GEN-LAST:event_rbMateriasNoInscriptasActionPerformed

    private void rbMateriasInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMateriasInscriptasActionPerformed
        bInscribir.setEnabled(false);
        bAnularInscripcion.setEnabled(true);
        eliminarTodosLosElementosDeLaTabla();
        actualizarMateriasInscriptas();
    }//GEN-LAST:event_rbMateriasInscriptasActionPerformed

    private void cbAlumnosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbAlumnosPropertyChange

    }//GEN-LAST:event_cbAlumnosPropertyChange

    private void cbAlumnosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbAlumnosItemStateChanged
        if (rbMateriasNoInscriptas.isSelected()) {
            eliminarTodosLosElementosDeLaTabla();
            actualizarMateriasNoInscriptas();
        } else if (rbMateriasInscriptas.isSelected()) {
            eliminarTodosLosElementosDeLaTabla();
            actualizarMateriasInscriptas();
        }
    }//GEN-LAST:event_cbAlumnosItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAnularInscripcion;
    private javax.swing.JButton bInscribir;
    private javax.swing.JButton bSalir;
    private javax.swing.JComboBox<Alumno> cbAlumnos;
    private javax.swing.ButtonGroup grupBotones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel logoULP;
    private javax.swing.JRadioButton rbMateriasInscriptas;
    private javax.swing.JRadioButton rbMateriasNoInscriptas;
    private javax.swing.JLabel rowCount;
    private javax.swing.JTable tTablaInscripciones;
    private javax.swing.JLabel tituloPrincipal;
    // End of variables declaration//GEN-END:variables

    public void InsertarModeloATabla() {
        tTablaInscripciones.setModel(modeloTabla);
        modeloTabla.addColumn("ID");
        modeloTabla.addColumn("Nombre");
        modeloTabla.addColumn("Año");

    }

    public void eliminarTodosLosElementosDeLaTabla() {
//    modeloTabla.getDataVector().removeAllElements();
//    tTablaInscripciones.updateUI();

        for (int i = modeloTabla.getRowCount() - 1; i >= 0; i--) {
            modeloTabla.removeRow(i);
        }
    }

    public void actualizarMateriasNoInscriptas() {
        try{
        Alumno alum = (Alumno) cbAlumnos.getSelectedItem();

        for (Materia listarMateria : inscripciondata.obtenerMateriasNoCursadas(alum.getIdalumno())) {

            int ID = listarMateria.getIdMateria();
            String nombre = listarMateria.getNombre();
            int anio = listarMateria.getAnioMateria();

            modeloTabla.addRow(new Object[]{ID, nombre, anio});

            rowCount.setText(modeloTabla.getRowCount() + "");
        }
        }catch(NullPointerException np){
        JOptionPane.showMessageDialog(this, "Debe ingresar almenos un alumno/materia en la base de datos.");
        }
    }

    public void actualizarMateriasInscriptas() {
       try{
        Alumno alum = (Alumno) cbAlumnos.getSelectedItem();

        for (Materia listarMateria : inscripciondata.obtenerMateriasCursadas(alum.getIdalumno())) {

            int ID = listarMateria.getIdMateria();
            String nombre = listarMateria.getNombre();
            int anio = listarMateria.getAnioMateria();
            
            modeloTabla.addRow(new Object[]{ID, nombre, anio});
            
        }
    }catch(NullPointerException np ){
    JOptionPane.showMessageDialog(this, "Debe ingresar almenos un alumno/materia en la base de datos.");
}
    }
}
